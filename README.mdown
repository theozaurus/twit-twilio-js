TwitTwilio - _Teerrwwiitt Teerriillio_ [![Build status](https://secure.travis-ci.org/theozaurus/twit-twilio-js.png)](http://travis-ci.org/theozaurus/twit-twilio-js)
======================================

A wrapper for the Twilio Client to enhance the API. This allows offers some
extra features:

 - More flexible callbacks for existing functionality
 - Callbacks for Flash security settings being shown or hidden
 - Automatic retry for dropped connections

Tests
=====

All of the tests are written in [Jasmine](http://pivotal.github.com/jasmine/).
[Sprockets](https://github.com/sstephenson/sprockets) is used to describe
dependencies between the files. To run the tests, you will first need to
install [Ruby](http://ruby-lang.org) and [Bundler](http://gembundler.com/).
Once you have this:

    $ bundle install
    $ bundle exec rake jasmine

Open your browser to [http://localhost:8888](http://localhost:8888)

If you want to run the tests directly in the console just type:

    $ bundle exec rake jasmine:ci
    /Users/theo/.rvm/rubies/ruby-1.9.3-p0/bin/ruby -S rspec spec/javascripts/support/jasmine_runner.rb --colour --format progress
    [2012-03-15 15:46:50] INFO  WEBrick 1.3.1
    [2012-03-15 15:46:50] INFO  ruby 1.9.3 (2011-10-30) [x86_64-darwin11.1.0]
    [2012-03-15 15:46:50] INFO  WEBrick::HTTPServer#start: pid=39919 port=63714
    Waiting for jasmine server on 63714...
    jasmine server started.
    Waiting for suite to finish in browser ...
    ..........................................

Or you can check the current status of master using [Travis](http://travis-ci.org/#!/theozaurus/twit-twilio-js)

Building
========

Provided you have all of the software installed to run the tests (see above).
You can build the code using:

    $ bundle exec rake build

This will create a copy of the code in the `build` folder. It will also package
up any external dependencies (such as [callback-js](http://github.com/theozaurus/callback-js)).
If you are already using `Sprockets` then it is best to copy the `src` folder
to your project and let that deal with the build dependencies (avoids
duplication).

TODO
====

 - Fine control of which Flash settings pane is shown
 - Control of Flash Microphone volumes
